{"version":3,"sources":["ws/AbstractWebSocket.js","ws/LocalWebSocket.js","ws/WebSocketFactory.js","routes/DeathCounter.jsx","routes/Home.jsx","routes/RequestQueue.jsx","routes/multi/BirdUp.jsx","routes/multi/ZeldaRaidAlert.jsx","routes/multi/ChargeRaidAlert.jsx","routes/multi/VideoPlayer.jsx","routes/multi/GifPlayer.jsx","routes/multi/TwitchMultiOverlay.jsx","routes/SoundPlayer.jsx","routes/SpeechSynthesisTester.jsx","util/VideoTools.js","routes/WhatTheDubPlayer.jsx","routes/WhatTheDub.jsx","util/testData.js","routes/RaidAlertTestHarness.jsx","routes/TTS.jsx","routes/VideoTestHarness.jsx","routes/Gauge.jsx","routes/MultiGauge.jsx","App.js","reportWebVitals.js","index.js"],"names":["AbstractWebSocket","constructor","wsAddress","panelName","listenFor","channelId","label","connect","disconnect","clearInterval","this","interval","ws","onmessage","onclose","onerror","close","next","queue","length","event","slice","hasNext","Array","isArray","LocalWebSocket","super","W3CWebSocket","onopen","forEach","l","send","JSON","stringify","type","from","name","subPanel","setInterval","message","parse","data","eventData","includes","console","log","push","e","reason","setTimeout","err","error","createWebSocket","arguments","undefined","DeathCounter","React","Component","props","_this","consumer","currentEvent","onDeath","count","onReset","setState","deaths","textScale","preventDefault","prevState","direction","state","Math","min","max","componentDidMount","urlParams","URLSearchParams","window","location","search","get","document","addEventListener","componentWillUnmount","removeEventListener","render","_jsx","style","height","width","userSelect","className","children","_jsxs","fontWeight","fontSize","concat","WebkitTextStroke","WebkitTextFillColor","lineHeight","color","setColor","useState","textAlign","margin","backgroundColor","Link","to","process","value","onChange","_ref","target","RequestQueue","requestList","showQueue","mode","position","bottom","left","onClick","request","requester","maxWidth","padding","reverse","map","index","BirdUp","birdup","async","stages","current","display","audio","Audio","play","stage","s","playing","onComplete","textRef","createRef","imageRef1","imageRef2","imageRef3","imageRef4","imageRef5","imageRef6","birdQueue","alt","right","zIndex","ref","src","fontFamily","transform","RaidAlert","ground","waterGroup","isHurt","isDying","timeout","scaleDimensions","preload","load","image","spritesheet","frameWidth","frameHeight","create","variable","scale","game","groundWidth","textures","getSourceImage","groundHeight","waterWidth","groundHeights","random","physics","add","staticGroup","anims","key","frames","generateFrameNumbers","start","end","frameRate","repeat","bgm","sound","loop","volume","battle","hurt","die","fanfare","once","scene","stop","sys","destroy","clearTimeout","linkY","link","sprite","setOrigin","setBounce","setScale","setGravityY","refreshBody","body","setCollideWorldBounds","collider","i","slime","setGravity","setVelocityX","overlap","setVelocity","useDamping","setDrag","waterX","water","x","y","g1","update","useEffect","config","Phaser","AUTO","transparent","parent","default","arcade","gravity","Game","id","spriteCount","sprites","file","music","leavingSound","variant","startFrame","endFrame","wall","speed","ceil","log2","spacing","displayHeight","displayWidth","r","floor","spriteHeight","spriteWidth","setVelocityY","innerWidth","innerHeight","VideoPlayer","timerCallback","videoElement","paused","ended","computeFrame","timeOut","ctx1","drawImage","vw","vh","frame","getImageData","red","green","blue","chromaKey","lowerBound","upperBound","ctx2","putImageData","canvasElement1","canvasElement2","averageColor","g","b","documentElement","clientHeight","clientWidth","getContext","onresize","overflow","url","controls","crossOrigin","border","GifPlayer","soundUrl","TwitchMultiOverlay","reset","connected","showComponent","soundVolume","theme","ZeldaRaidAlert","ChargeRaidAlert","customTheme","SoundPlayer","consumerLocked","soundPlaying","mediaName","top","SpeechSynthesisTester","SpeechSynthesisUtterance","speechSynthesis","speechTest","msg","text","speak","convertSecondsToAltTimestamp","seconds","m","ms","trunc","toString","padStart","createWebVttDataUri","subtitles","substitution","btoa","convertSubtitlesToWebVtt","subtitle","startTime","endTime","join","WhatTheDubPlayer","currentIndex","isTalking","hasEnded","muted","zombieInterval","pauseListener","setIsTalking","setMuted","setCurrentIndex","voice","maleVoice","femaleVoice","onend","getElementById","updateSubtitle","video","findIndex","currentTime","pause","currentSubtitle","startListener","onPlay","onPause","onEnded","kind","srcLang","WhatTheDub","entry","replace","joinedMiniGame","videoData","videoUrl","background","configs","YOSHI","SKULLMAN","CHAIR","RaidAlertTestHarness","clicked","setClicked","raider","setRaider","raidSize","setRaidSize","setTheme","setKey","storedConfig","setStoredConfig","raidTheme","raidId","axios","headers","localStorage","getItem","getRaidAlert","raidAlert","TTS","textList","started","disabled","marginLeft","VideoTestHarness","setChromaKey","setLowerBound","setUpperBound","visible","setVisible","params","_Fragment","_ref2","_ref3","progress","setProgress","setMax","setLabel","isFilling","setIsFilling","sounds","currentProgress","maxValue","init","increase","increaseSoundUrl","decrease","decreaseSoundUrl","complete","completeSoundUrl","currentValue","onProgressChange","newProgress","deltaP","parseInt","oldValue","maxHeight","WebkitTextStrokeWidth","WebkitTextStrokeColor","displayGauge","setDisplayGauge","isDisappearing","setIsDisappearing","gaugeState","gaugeIndex","gaugeKey","gaugeChange","gaugeKeys","Object","keys","gauge","consumerInt","gaugeInt","indexOf","oldGauge","App","Router","Switch","Route","path","component","exact","Gauge","MultiGauge","Home","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","onvoiceschanged","getVoices","find","element","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e8bff595.chunk.js","sourcesContent":["export default class AbstractWebSocket {\n    constructor(wsAddress, panelName, listenFor, channelId, label) {\n        this.channelId = channelId;\n        if (!Array.isArray(label)) {\n            label = [label];\n        }\n        this.label = label;\n        this.panelName = panelName;\n        this.listenFor = listenFor;\n        this.interval = {};\n        this.queue = [];\n        this.wsAddress = wsAddress;\n        this.ws = null;\n    }\n\n    connect = () => {}\n\n    disconnect = () => {\n        clearInterval(this.interval);\n        this.ws.onmessage = () => {};\n        this.ws.onclose = () => {};\n        this.ws.onerror = () => {};\n        this.ws.close();\n    }\n\n    next = () => {\n        if (this.queue.length <= 0) {\n            return null;\n        }\n\n        let event = this.queue[0];\n        this.queue = this.queue.slice(1);\n        return event;\n    }\n\n    hasNext = () => {\n        if (this.queue.length <= 0) {\n            return false;\n        }\n\n        return true;\n    }\n}","import AbstractWebSocket from './AbstractWebSocket';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nexport default class LocalWebSocket extends AbstractWebSocket {\n    constructor(wsAddress, panelName, listenFor, channelId, label) {\n        super(wsAddress, panelName, listenFor, channelId, label);\n    }\n\n    connect = () => {\n        this.ws = new W3CWebSocket(this.wsAddress);\n        this.ws.onopen = () => {\n            this.label.forEach((l) => {\n                this.ws.send(JSON.stringify({\n                    type: \"PANEL_INIT\",\n                    from: \"PANEL\",\n                    name: this.panelName,\n                    subPanel: l\n                }));\n\n                if (this.interval[l]) {\n                    clearInterval(this.interval);\n                }\n\n                this.interval[l] = setInterval(() => {\n                    this.ws.send(JSON.stringify({\n                        type: \"PANEL_PING\",\n                        from: \"PANEL\",\n                        name: this.panelName,\n                        subPanel: l\n                    }));\n                }, 20 * 1000);\n            });\n        };\n    \n        this.ws.onmessage = (message) => {\n            let event = JSON.parse(message.data);\n\n            let subPanel = event.eventData && event.eventData.subPanel ? event.eventData.subPanel : \"default\";\n    \n            if (!this.listenFor.includes(event.type) || !this.label.includes(subPanel)) {\n                return;\n            }\n    \n            console.log(\"Received: \" + JSON.stringify(event, null, 5));\n    \n            this.queue.push(event);\n        };\n    \n        this.ws.onclose = (e) => {\n            console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n            clearInterval(this.interval);\n            setTimeout(() => {\n                this.connect();\n            }, 5000);\n        };\n    \n        this.ws.onerror = (err) => {\n            console.error('Socket encountered error: ', err.message, 'Closing socket');\n            this.ws.close();\n        };\n    }\n}","import LocalWebSocket from './LocalWebSocket';\nimport RemoteWebSocket from './RemoteWebSocket';\n\nexport let createWebSocket = (panelName, listenFor, channelId, label = \"default\", onConnected) => {\n    console.log(\"BUILD TARGET: \" + process.env.REACT_APP_BUILD_TARGET);\n    if (process.env.REACT_APP_BUILD_TARGET === \"electron\") {\n        return new LocalWebSocket('ws://localhost:8081', panelName, listenFor, null, label);\n    } else {\n        return new RemoteWebSocket('wss://deusprogrammer.com/api/ws/twitch', panelName, listenFor, channelId, label, onConnected);\n    }\n}","import React from 'react';\nimport {createWebSocket} from '../ws/WebSocketFactory';\n\nconst fontSize = 32;\n\nclass DeathCounter extends React.Component {\n\tconstructor(props) {\n        super(props);\n        this.ws = null;\n        this.interval = null;\n        this.state = {\n            currentEvent: null,\n\t\t\tdeaths: 0,\n\t\t\ttextScale: 1\n        }\n    }\n\n    consumer = () => {\n        if (!this.ws.hasNext()) {\n            return;\n        }\n\n        let currentEvent = this.ws.next();\n        this.onDeath(currentEvent.eventData.count);\n    }\n\n\tcomponentDidMount() {\n\t\tlet urlParams = new URLSearchParams(window.location.search);\n\t\tthis.ws = createWebSocket('DEATH_COUNTER', ['DEATH_COUNT'], urlParams.get('channelId'));\n\t\tthis.ws.connect();\n\t\tsetInterval(this.consumer, 0);\n\t\t\n        document.addEventListener(\"contextmenu\", (e) => {this.onReset(e)});\n\t}\n\n\tcomponentWillUnmount() {\n        document.removeEventListener(\"contextmenu\", (e) => {this.onReset(e)});\n\t\tthis.ws.disconnect();\n\t}\n\n\tonReset = (e) => {\n\t\tthis.setState({deaths: 0, textScale: 1});\n\t\te.preventDefault();\n\t\treturn false;\n\t}\n\n\tonDeath = (count = null) => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\tdeaths: count !== -1 ? count : prevState.deaths + 1,\n\t\t\t\ttextScale: 1\n\t\t\t}\n\t\t});\n\n\t\tlet direction = 1;\n\n\t\tlet interval = setInterval(() => {\n\t\t\t//If scaling up\n\t\t\tif (this.state.textScale <= 2 && direction > 0) {\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttextScale: Math.min(prevState.textScale + 0.1, 2)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If scaling down\n\t\t\tif (this.state.textScale >= 1 && direction < 0) {\n\t\t\t\tthis.setState((prevState) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttextScale: Math.max(prevState.textScale - 0.1, 1)\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If done animating up\n\t\t\tif (this.state.textScale >= 2 && direction > 0) {\n\t\t\t\tdirection = -1;\n\t\t\t}\n\n\t\t\t// If done animating down\n\t\t\tif (this.state.textScale <= 1 && direction < 0) {\n\t\t\t\tclearInterval(interval);\n\t\t\t}\n\t\t}, 10);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{height: \"100vh\", width: \"100vw\", userSelect: \"none\"}} className=\"App\">\n\t\t\t\t<span style={{fontWeight: \"bolder\", fontSize: `${this.state.textScale * fontSize}pt`, WebkitTextStroke: \"2px black\", WebkitTextFillColor: \"white\", lineHeight: \"100vh\", height: \"100vh\"}}>Deaths: {this.state.deaths}</span>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default DeathCounter;\n","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default () => {\n    const [color, setColor] = useState(0);\n    return (\n        <div style={{textAlign: \"center\", margin: \"auto\", width: \"100vw\", height: \"100vh\", backgroundColor: `rgb(${color}, ${color}, ${color})`, color: `rgb(${255 - color}, ${255 - color}, ${255 - color})`}}>\n            <h1>Twitch Tools</h1>\n            <div>\n                <Link to={`${process.env.PUBLIC_URL}/death-counter`}>Death Counter</Link><br/>\n                <Link to={`${process.env.PUBLIC_URL}/sound-player`}>Sound Player</Link><br/>\n                <Link to={`${process.env.PUBLIC_URL}/birdup`}>BIRD UP</Link><br/>\n                <input type=\"range\" value={color} max={255} onChange={({target: {value}}) => {setColor(value)}} /><span>{color}</span>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport {createWebSocket} from '../ws/WebSocketFactory';\n\nclass RequestQueue extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ws = null;\n        this.interval = null;\n        this.state = {\n            mode: \"NEXT_UP\",\n            requestList: []\n        }\n    }\n\n    consumer = () => {\n        if (!this.ws.hasNext()) {\n            return;\n        }\n\n        let currentEvent = this.ws.next();\n        this.setState({requestList: currentEvent.eventData.requestList});\n    }\n\n\tcomponentDidMount() {\n\t\tlet urlParams = new URLSearchParams(window.location.search);\n        this.ws = createWebSocket('REQUESTS', ['REQUEST'], urlParams.get('channelId'));\n        this.ws.connect();\n        setInterval(this.consumer, 0);\n\n        // Cycle between next up view and queue view\n        setInterval(() => {\n            this.showQueue();\n        }, 1000 * 60);\n\t}\n\n    componentWillUnmount() {\n        this.ws.disconnect();\n    }\n\n    showQueue = () => {\n        this.setState({mode: \"QUEUE\"});\n        setTimeout(() => {\n            this.setState({mode: \"NEXT_UP\"})\n        }, 1000 * 10);\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{height: \"100vh\", width: \"100vw\", userSelect: \"none\", position: \"relative\"}} className=\"App\">\n                    <div style={{width: \"100vw\", position: \"absolute\", bottom: \"0px\", left: \"0px\", textAlign: \"center\", fontSize: \"20pt\", WebkitTextStroke: \"1px black\", WebkitTextFillColor: \"white\"}} onClick={this.showQueue}>\n                        {this.state.requestList.length > 0 ? <marquee>Next up: {this.state.requestList[this.state.requestList.length - 1].request} from {this.state.requestList[this.state.requestList.length - 1].requester}</marquee>\n                        :\n                        <marquee>No requests so far.  Make a request by donating!</marquee>}\n                    </div>\n                    <div style={{width: \"100vw\", position: \"absolute\", bottom: \"0px\", left: \"0px\", textAlign: \"center\"}}>\n                        <div className={this.state.mode === \"QUEUE\" ? \"open\" : \"closed\"} style={{maxWidth: \"50%\", margin: \"auto\", padding: \"0px 5px\", backgroundColor: \"gray\", color: \"white\"}}>\n                            <strong>Coming up:</strong>\n                            {this.state.requestList.slice().reverse().slice(0, 3).map((request, index) => {\n                                return (\n                                    <div key={`entry-${index}`} style={{color: index === 0 ? \"yellow\" : \"white\"}}>\n                                        {index + 1}: {request.request} from {request.requester}\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RequestQueue;\n","import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nlet urlParams = new URLSearchParams(window.location.search);\n\nclass BirdUp extends React.Component {\n\t\n    constructor() {\n        super();\n\n        this.playing = false;\n\n        this.textRef = React.createRef();\n        this.imageRef1 = React.createRef();\n        this.imageRef2 = React.createRef();\n        this.imageRef3 = React.createRef();\n        this.imageRef4 = React.createRef();\n        this.imageRef5 = React.createRef();\n        this.imageRef6 = React.createRef();\n\n        this.stages = [this.textRef, this.imageRef1, this.imageRef2, this.imageRef3, this.imageRef4, this.imageRef5, this.imageRef6];\n        this.birdQueue = [];\n\n        this.state = {\n        }\n    }\n\n\t// connect = async () => {\n    //     const ws = new W3CWebSocket('wss://deusprogrammer.com/api/ws/twitch');\n\n    //     ws.onopen = () => {\n    //         ws.send(JSON.stringify({\n    //             type: \"REGISTER_PANEL\",\n    //             from: \"PANEL\",\n    //             channelId: urlParams.get(\"channelId\")\n    //         }));\n\n    //         setInterval(() => {\n    //             ws.send(JSON.stringify({\n    //                 type: \"PING_SERVER\",\n    //                 from: \"PANEL\",\n    //                 channelId: urlParams.get(\"channelId\")\n    //             }));\n    //         }, 20 * 1000);\n    //     };\n\n    //     ws.onmessage = async (message) => {\n    //         let event = JSON.parse(message.data);\n            \n\t// \t\tif (event.type === \"BIRDUP\") {\n    //             this.birdQueue.push({});\n\t// \t\t\t//this.birdup();\n\t// \t\t}\n    //     };\n\n    //     ws.onclose = async (e) => {\n    //         console.log('Socket is closed. Reconnect will be attempted in 5 second.', e.reason);\n    //         this.setState({ mobs: [] });\n    //         setTimeout(async () => {\n    //             this.connect();\n    //         }, 5000);\n    //     };\n\n    //     ws.onerror = async (err) => {\n    //         console.error('Socket encountered error: ', err.message, 'Closing socket');\n    //         ws.close();\n    //     };\n    // }\n\n    // consumer = async () => {\n    //     if (this.birdQueue.length <= 0 || this.playing || !this.stages[0].current) {\n    //         return;\n    //     }\n\n    //     this.birdQueue = this.birdQueue.slice(1);\n    //     this.playing = true;\n\n    //     await this.birdup();\n    // }\n\n\tcomponentDidMount() {\n\t\t// If a channel id is supplied, connect the websocket for updates via bot commands\n\t\t// if (urlParams.get(\"channelId\")) {\n\t\t// \tthis.connect();\n\t\t// }\n\n        // setInterval(this.consumer, 1000);\n\n        this.birdup();\n\t}\n\n\tbirdup = async () => {\n        this.stages[0].current.style.display = \"block\";\n        let audio = new Audio(`${process.env.PUBLIC_URL}/sounds/birdup.mp3`);\n        await audio.play();\n\n        let stage = 1;\n        let interval = setInterval(() => {\n            if (stage >= this.stages.length) {\n                clearInterval(interval);\n                setTimeout(() => {\n                    for (let s of this.stages) {\n                        s.current.style.display = \"none\";\n                    }\n\n                    // Delay start of next queue element by at least 5 seconds\n                    setTimeout(() => {\n                        this.playing = false;\n                        this.props.onComplete(\"birdup\");\n                    }, 5000);\n                }, 2000);\n                return;\n            }\n\n            this.stages[stage++].current.style.display = \"block\";\n        }, 300);\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{height: \"100vh\", width: \"100vw\", userSelect: \"none\", position: \"relative\"}} className=\"App\">\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"20%\", zIndex: \"101\", display: \"none\"}} ref={this.imageRef1} src={`${process.env.PUBLIC_URL}/images/birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"40%\", zIndex: \"102\", display: \"none\"}} ref={this.imageRef2} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"60%\", zIndex: \"103\", display: \"none\"}} ref={this.imageRef3} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"80%\", zIndex: \"104\", display: \"none\"}} ref={this.imageRef4} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"100%\", zIndex: \"105\", display: \"none\"}} ref={this.imageRef5} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <img  alt=\"birdup\" style={{position: \"absolute\", fontSize: \"20px\", right: \"0px\", bottom: \"0px\", height: \"120%\", zIndex: \"106\", display: \"none\"}} ref={this.imageRef6} src={`${process.env.PUBLIC_URL}/images//birdup.png`} />\n                <div  style={{position: \"absolute\", fontFamily: \"Cooper Black\", WebkitTextStroke: \"5px black\", WebkitTextFillColor: \"#CE01E2\", bottom: \"0px\", left: \"50%\", transform: \"translate(-50%, -50%)\", fontSize: \"70pt\",  zIndex: \"200\", display: \"none\"}} ref={this.textRef}>BIRD UP!</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BirdUp;","import React, {useState, useEffect} from 'react';\nimport Phaser from 'phaser';\n\nlet RaidAlert = (props) => {\n    let ground, waterGroup;\n\n    let isHurt = false;\n    let isDying = false;\n    let timeout = null;\n    // let text;\n    let scaleDirection = 1;\n\n    let scaleDimensions = {w: 1440, h: 820};\n\n    function preload() {\n        const slimeImage = process.env.PUBLIC_URL + '/images/slime-sprite.png';\n        const linkImage = process.env.PUBLIC_URL + '/images/link.png';\n\n        const groundImage = process.env.PUBLIC_URL + '/images/ground.png';\n        const waterImage = process.env.PUBLIC_URL + '/images/water.png';\n\n        const bgmSound = process.env.PUBLIC_URL + '/sounds/bgm.mp3';\n        const battleSound = process.env.PUBLIC_URL + '/sounds/battle.wav';\n        const hurtSound = process.env.PUBLIC_URL + '/sounds/hurt.wav';\n        const dieSound = process.env.PUBLIC_URL + '/sounds/die.wav';\n        const fanfareSound = process.env.PUBLIC_URL + '/sounds/fanfare.wav';;\n\n        this.load.image('ground', groundImage);\n        this.load.image('water', waterImage);\n\n        this.load.spritesheet('slime', \n            slimeImage,\n            { frameWidth: 80, frameHeight: 80 }\n        );\n        this.load.spritesheet('link', \n            linkImage,\n            { frameWidth: 80, frameHeight: 160 }\n        );\n\n        this.load.audio('bgm', [bgmSound]);\n        this.load.audio('battle', [battleSound]);\n        this.load.audio('hurt', [hurtSound]);\n        this.load.audio('die', [dieSound]);\n        this.load.audio('fanfare', [fanfareSound]);\n    }\n\n    function create() {\n        const variable = props.variable;\n        // const message = props.message;\n        const scale = this.game.scale.width/scaleDimensions.w;\n        const groundWidth = this.textures.get('ground').getSourceImage().width * scale;\n        const groundHeight = this.textures.get('ground').getSourceImage().height * scale;\n        const waterWidth = this.textures.get('water').getSourceImage().width * scale;\n        const groundHeights = [(Math.random() * 100 + 200) * scale, (Math.random() * 100 + 200) * scale];\n\n        ground = this.physics.add.staticGroup();\n        waterGroup = this.physics.add.staticGroup();\n        this.anims.create({\n            key: 'wobble',\n            frames: this.anims.generateFrameNumbers('slime', { start: 0, end: 2 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'idle',\n            frames: this.anims.generateFrameNumbers('link', { start: 0, end: 0 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        this.anims.create({\n            key: 'hurt',\n            frames: this.anims.generateFrameNumbers('link', { start: 1, end: 1 }),\n            frameRate: 10,\n            repeat: -1\n        });\n\n        let bgm = this.sound.add('bgm', {loop: true, volume: 0.25});\n        let battle = this.sound.add('battle', {loop: false});\n        let hurt = this.sound.add('hurt', {loop: false, volume: 3});\n        let die = this.sound.add('die', {loop: false});\n        let fanfare = this.sound.add('fanfare', {loop: false, volume: 1});\n        die.once('complete', () => {\n            this.scene.stop();\n            this.sys.game.destroy(true);\n            clearTimeout(timeout);\n            props.onComplete();\n        });\n        fanfare.once('complete', () => {\n            this.scene.stop();\n            this.sys.game.destroy(true);\n            clearTimeout(timeout);\n            props.onComplete();\n        })\n\n        battle.play();\n        bgm.play();\n\n        // Draw Link\n        const linkY = this.game.scale.height - (groundHeight - groundHeights[1]);\n        let link = this.physics.add.sprite(groundWidth + 200, linkY, 'link');\n        link.setOrigin(0, 1);\n        link.setBounce(0.5);\n        link.setScale(scale);\n        link.setGravityY(300);\n        link.refreshBody();\n        link.body.setCollideWorldBounds(true);\n        link.anims.play('idle', true);\n        this.physics.add.collider(link, ground);\n\n        // Draw slimes\n        for (let i = 0; i < variable; i++) {\n            let slime = this.physics.add.sprite(-i * .5, (Math.random() * (this.game.scale.height - 100)) - (groundHeight - groundHeights[0]), 'slime');\n            slime.setScale(scale);\n            slime.setBounce(Math.min(1, Math.random() + 0.5));\n            slime.body.setGravity(400);\n            slime.anims.play('wobble', true);\n            slime.setVelocityX(Math.random() * 300);\n            this.physics.add.collider(slime, ground);\n            this.physics.add.overlap(link, slime, () => {\n                if (!isHurt) {\n                    isHurt = true;\n                    hurt.play();\n                }\n                link.play('hurt');\n                link.setVelocity(500, -50);\n                link.body.useDamping = true;\n                link.setDrag(0.99);\n            }, null, this);\n            this.physics.add.overlap(link, waterGroup, () => {\n                if (!isDying) {\n                    isDying = true;\n                    die.play();\n                }\n                bgm.stop();\n                link.play('hurt');\n                link.setVelocity(0, 50);\n            }, null, this);\n        }\n\n        // Draw water\n        let waterX = 0;\n        while (waterX < this.game.scale.width) {\n            let water = waterGroup.create(0, 0, \"water\");\n            water.setScale(scale);\n            water.setOrigin(0, 1);\n            water.x = waterX;\n            water.y = this.game.scale.height + 100;\n            water.refreshBody();\n            waterX += (waterWidth);\n        }\n\n        // Draw ground\n        for (let i = 0; i < 2; i++) {\n            let x = i * ((groundWidth) + 200);\n            let height = groundHeights[i];\n            let g1 = ground.create(x, this.game.scale.height + height, 'ground');\n            g1.setOrigin(0, 1);\n            g1.setScale(scale);\n            g1.refreshBody();\n        }\n\n        // text = this.add.text(0.5 * this.game.scale.width, 0.5 * this.game.scale.height, message, { fontSize: \"30pt\", stroke: \"#000\", strokeThickness: 5 });\n        // text.setOrigin(0.5, 0.5);\n\n        // Set timeout\n        timeout = setTimeout(() => {\n            bgm.stop();\n            fanfare.play();\n        }, 10000);\n    }\n\n    function update() {\n        // text.setScale(text.scale + (scaleDirection * 0.01));\n        // text.tint = Math.random() * 0xffffff;\n        // if (text.scale > 2 || text.scale < 0.5) {\n        //     scaleDirection *= -1;\n        // }\n    }\n\n    const start = () => {\n        const config = {\n            type: Phaser.AUTO,\n            width: \"100vw\",\n            height: \"100vh\",\n            transparent: true,\n            parent: \"phaser\",\n            scene: {\n                preload,\n                create,\n                update\n            }, \n            physics: {\n                default: 'arcade',\n                arcade: {\n                    gravity: { y: 200 }\n                }\n            },\n        };\n\n        new Phaser.Game(config);\n    }\n\n    useEffect(() => {\n        start();\n    }, []);\n\n    return (\n        <div>\n            <div id=\"phaser\" />\n        </div>\n    );\n}\n\nexport default RaidAlert;\n","import React, {useEffect} from 'react';\nimport Phaser from 'phaser';\n\nlet RaidAlert = (props) => {\n    let spriteCount = 0;\n    let timeout = false;\n\n    let scaleDimensions = {w: 1440, h: 820};\n\n    function preload() {\n        const groundImage = process.env.PUBLIC_URL + '/images/ground.png';\n        this.load.image('ground', groundImage);\n\n        props.config.sprites.forEach((sprite, index) => {\n            this.load.spritesheet(`sprite${index}`,\n                sprite.file,\n                { frameWidth: sprite.frameWidth, frameHeight: sprite.frameHeight }\n            );\n        });\n\n        this.load.audio('music', [props.config.music.file]);\n        this.load.audio('leaving', [props.config.leavingSound.file]);\n    }\n\n    function create() {\n        const scale = this.game.scale.width/scaleDimensions.w;\n        const variable = props.variable;\n        const variant = props.config.variant ? props.config.variant : \"CHARGE_RIGHT\";\n\n        props.config.sprites.forEach((sprite, index) => {\n            this.anims.create({\n                key: `animation${index}`,\n                frames: this.anims.generateFrameNumbers(`sprite${index}`, { start: sprite.startFrame, end: sprite.endFrame }),\n                frameRate: sprite.frameRate,\n                repeat: -1\n            });\n        });\n\n        let music = this.sound.add('music', {loop: true, volume: props.config.music.volume});\n        let leavingSound = this.sound.add('leaving', {loop: false, volume: props.config.leavingSound.volume});\n\n        let speed = (Math.ceil(Math.log2(variable) + 1) * 100);\n        let spacing = Math.ceil(5000/variable);\n\n        let wall;\n\n        if (variant === \"CHARGE_RIGHT\") {\n            wall = this.physics.add.sprite(this.game.scale.width + 256, 0, 'ground');\n            wall.setOrigin(0, 0);\n            wall.displayHeight = this.game.scale.height;\n        } else if (variant === \"CHARGE_LEFT\") {\n            wall = this.physics.add.sprite(-256, 0, 'ground');\n            wall.setOrigin(1, 0);\n            wall.displayHeight = this.game.scale.height;\n        } else if (variant === \"CHARGE_UP\") {\n            wall = this.physics.add.sprite(0, -256, 'ground');\n            wall.setOrigin(0, 1);\n            wall.displayWidth = this.game.scale.width;\n        } else if (variant === \"CHARGE_DOWN\") {\n            wall = this.physics.add.sprite(0, this.game.scale.width + 256, 'ground');\n            wall.setOrigin(0, 0);\n            wall.displayWidth = this.game.scale.width;\n        }\n\n        spriteCount = variable;\n\n        music.play();\n\n        // Draw sprites\n        for (let i = 0; i < variable; i++) {\n            let r = Math.floor(Math.random() * props.config.sprites.length);\n            let sprite;\n            const spriteHeight = props.config.sprites[r].frameHeight * scale;\n            const spriteWidth = props.config.sprites[r].frameWidth * scale;\n            if (variant === \"CHARGE_RIGHT\") {\n                sprite = this.physics.add.sprite(-i * spacing, Math.random() * (this.game.scale.height - spriteHeight), `sprite${r}`);\n                sprite.setOrigin(0, 0);\n                sprite.setScale(scale);\n                sprite.body.setGravity(0);\n                sprite.anims.play(`animation${r}`, true);\n                sprite.setVelocityX(speed);\n            } else if (variant === \"CHARGE_LEFT\") {\n                sprite = this.physics.add.sprite((i * spacing) + this.game.scale.width, Math.random() * (this.game.scale.height - spriteHeight), `sprite${r}`);\n                sprite.setOrigin(0, 0);\n                sprite.setScale(scale);\n                sprite.body.setGravity(0);\n                sprite.anims.play(`animation${r}`, true);\n                sprite.setVelocityX(-speed);\n            } else if (variant === \"CHARGE_UP\") {\n                sprite = this.physics.add.sprite(Math.random() * (this.game.scale.width - spriteWidth), (i * spacing) + this.game.scale.height, `sprite${r}`);\n                sprite.setOrigin(0, 0);\n                sprite.setScale(scale);\n                sprite.body.setGravity(0);\n                sprite.anims.play(`animation${r}`, true);\n                sprite.setVelocityY(-speed);\n            } else if (variant === \"CHARGE_DOWN\") {\n                sprite = this.physics.add.sprite(Math.random() * (this.game.scale.width - spriteWidth), -i * spacing, `sprite${r}`);\n                sprite.setOrigin(0, 0);\n                sprite.setScale(scale);\n                sprite.body.setGravity(0);\n                sprite.anims.play(`animation${r}`, true);\n                sprite.setVelocityY(speed);\n            }\n\n            this.physics.add.overlap(sprite, wall, () => {\n                leavingSound.play();\n                sprite.destroy();\n                spriteCount--;\n            }, null, this);\n        }\n\n        setTimeout(() => {\n            timeout = true;\n        }, 15000);\n    }\n\n    function update() {\n        if (spriteCount <= 0 && timeout) {\n            this.scene.stop();\n            this.sys.game.destroy(true);\n            \n            if (props.onComplete) {\n                props.onComplete();\n            }\n        }\n\n        // text.setScale(text.scale + (scaleDirection * 0.01));\n        // text.tint = Math.random() * 0xffffff;\n        // if (text.scale > 2 || text.scale < 0.5) {\n        //     scaleDirection *= -1;\n        // }\n    }\n\n    const start = () => {\n        const config = {\n            type: Phaser.AUTO,\n            width: window.innerWidth,\n            height: window.innerHeight,\n            transparent: true,\n            parent: \"phaser\",\n            scene: {\n                preload,\n                create,\n                update\n            }, \n            physics: {\n                default: 'arcade',\n                arcade: {\n                    gravity: { y: 0 }\n                }\n            },\n        };\n\n        new Phaser.Game(config);\n    }\n\n    useEffect(() => {\n        start();\n    }, []);\n\n    return (\n        <div>\n            <div id=\"phaser\" />\n        </div>\n    );\n}\n\nexport default RaidAlert;","import React from 'react';\n\nconst RANDOM_VIDEO_COUNT = 7;\n\nexport default class VideoPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.videoElement = React.createRef();\n        this.canvasElement1 = React.createRef();\n        this.canvasElement2 = React.createRef();\n        this.ctx1 = null;\n        this.ctx2 = null;\n\n        this.timeOut = null;\n\n        this.state = {\n            averageColor: {r: 0, g: 0, b: 0},\n            vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\n            vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n        }\n    }\n\n    componentDidMount() {\n        this.videoElement.current.addEventListener(\"ended\", () => {\n            if (this.timeOut) {\n                clearTimeout(this.timeOut);\n            }\n            this.props.onComplete(\"randomcustomvideo\");\n        })\n\n        this.ctx1 = this.canvasElement1.current.getContext('2d');\n        this.ctx2 = this.canvasElement2.current.getContext('2d');\n    \n        this.videoElement.current.addEventListener('play', () => {\n            this.timerCallback();\n        }, false);\n\n        window.onresize = () => {\n            this.setState({\n                vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\n                vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\n            })\n        };\n\n        this.videoElement.current.volume = this.props.volume;\n        this.videoElement.current.play();\n    }\n\n    timerCallback = () => {\n        if ((this.videoElement && this.videoElement.current) && (this.videoElement.current.paused || this.videoElement.current.ended)) {\n            return;\n        }\n        this.computeFrame();\n        this.timeOut = setTimeout(() => {\n            this.timerCallback();\n        }, 0);\n    };\n\n    computeFrame = () => {\n        if (!this.videoElement.current) {\n            return;\n        }\n        this.ctx1.drawImage(this.videoElement.current, 0, 0, this.state.vw, this.state.vh);\n        const frame = this.ctx1.getImageData(0, 0, this.state.vw, this.state.vh);\n        const length = frame.data.length;\n\n        for (let i = 0; i < length; i += 4) {\n            const red = frame.data[i + 0];\n            const green = frame.data[i + 1];\n            const blue = frame.data[i + 2];\n\n            if (this.props.chromaKey === \"green\") {\n                if (green > red + blue) {\n                    frame.data[i + 3] = 0;\n                }\n            } else if (this.props.chromaKey === \"red\") {\n                if (red > green + blue) {\n                    frame.data[i + 3] = 0;\n                }\n            } else if (this.props.chromaKey === \"blue\") {\n                if (blue > red + green) {\n                    frame.data[i + 3] = 0;\n                }\n            } else if (this.props.chromaKey === \"black\") {\n                if (green <= 177 && red <= 177 && blue <= 177) {\n                    frame.data[i + 3] = 0;\n                }\n            } else if (this.props.chromaKey === \"custom\") {\n                if (green >= this.props.lowerBound && green <= this.props.upperBound && red >= this.props.lowerBound && red <= blue >= this.props.lowerBound && this.props.upperBound && blue <= this.props.upperBound) {\n                    frame.data[i + 3] = 0;\n                }\n            }\n        }\n        this.ctx2.putImageData(frame, 0, 0);\n    };\n    \n    render() {\n        let n = Math.ceil((Math.random() * RANDOM_VIDEO_COUNT));\n\n        return (\n            <div \n                style={{overflow: 'hidden'}}>\n                <video\n                    style={{display: \"none\"}}\n                    src={this.props.url} \n                    controls={false}\n                    crossOrigin=\"anonymous\"\n                    ref={this.videoElement} />\n                <canvas height={this.state.vh} width={this.state.vw} style={{display: \"none\"}} ref={this.canvasElement1} />\n                <canvas height={this.state.vh} width={this.state.vw} style={{border: \"1px solid black\"}} ref={this.canvasElement2} />\n            </div>\n        )\n    }\n}","import React from 'react';\n\nclass GifPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    async componentDidMount() {\n        let audio = new Audio(this.props.soundUrl);\n        audio.volume = this.props.volume;\n        audio.addEventListener(\"ended\", () => {\n            this.props.onComplete();\n        });\n        await audio.play();\n    }\n\n\trender() {\n\t\treturn (\n            <img src={this.props.url} />\n\t\t);\n\t}\n}\n\nexport default GifPlayer;\n","import React from 'react';\n\nimport BirdUp from './BirdUp';\nimport ZeldaRaidAlert from './ZeldaRaidAlert';\nimport ChargeRaidAlert from './ChargeRaidAlert';\nimport VideoPlayer from './VideoPlayer';\n\nimport {createWebSocket} from '../../ws/WebSocketFactory';\nimport GifPlayer from './GifPlayer';\n\nexport default class TwitchMultiOverlay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ws = null;\n        this.interval = null;\n        this.state = {\n            currentEvent: null,\n            connected: false\n        }\n    }\n\n    consumer = () => {\n        if (!this.ws.hasNext() || this.state.currentEvent) {\n            console.log(`SKIPPING: ${this.ws.hasNext()} || ${this.state.currentEvent}`);\n            return;\n        }\n\n        console.log(\"EVENT\");\n\n        let currentEvent = this.ws.next();\n        this.setState({currentEvent});\n    }\n\n    reset = () => {\n        this.setState({currentEvent: null});\n    }\n\n    componentDidMount() {\n        let urlParams = new URLSearchParams(window.location.search);\n        this.ws = createWebSocket('MULTI', ['BIRDUP', 'BADAPPLE', 'VIDEO', 'IMAGE', 'DYNAMIC'], urlParams.get('channelId'), urlParams.get('subPanel') ? urlParams.get('subPanel') : \"default\", () => {this.setState({connected: true})});\n        this.ws.connect();\n        setInterval(this.consumer, 5000);\n    }\n\n    componentWillUnmount() {\n\t\tthis.ws.disconnect();\n\t}\n\n    render() {\n        let showComponent = null;\n\n        if (!this.state.currentEvent) {\n            return (<div></div>)\n        }\n\n        switch(this.state.currentEvent.type) {\n            case \"BIRDUP\":\n                showComponent = <BirdUp \n                                    onComplete={this.reset}\n                                    requester={this.state.currentEvent.eventData.requester} />;\n                break;\n            case \"VIDEO\":\n                showComponent = <VideoPlayer \n                                    onComplete={this.reset} \n                                    url={this.state.currentEvent.eventData.url}\n                                    volume={this.state.currentEvent.eventData.volume}\n                                    soundUrl={this.state.currentEvent.eventData.soundUrl}\n                                    soundVolume={this.state.currentEvent.eventData.soundVolume}\n                                    chromaKey={this.state.currentEvent.eventData.chromaKey} />;\n                break;\n            case \"IMAGE\":\n                showComponent = <GifPlayer\n                                    onComplete={this.reset}\n                                    url={this.state.currentEvent.eventData.url}\n                                    soundUrl={this.state.currentEvent.eventData.soundUrl}\n                                    volume={this.state.currentEvent.eventData.soundVolume} />\n                break;\n            case \"DYNAMIC\":\n                if (this.state.currentEvent.eventData.theme === \"ZELDA2\") {\n                    showComponent = <ZeldaRaidAlert \n                                        onComplete={this.reset}\n                                        variable={this.state.currentEvent.eventData.variable} />;\n                } else if (this.state.currentEvent.eventData.theme === \"STORED\") {\n                    showComponent = <ChargeRaidAlert \n                                        onComplete={this.reset}\n                                        variable={this.state.currentEvent.eventData.variable}\n                                        config={this.state.currentEvent.eventData.customTheme} />;\n                }\n                break;\n            default:\n                break;\n        }\n\n        return (\n            <div>\n                <div className=\"multiContainer\">\n                    {showComponent}\n                    <span className=\"alert-text\">{this.state.currentEvent.eventData.message}</span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {createWebSocket} from '../ws/WebSocketFactory';\n\nclass SoundPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ws = null;\n        this.consumerLocked = false;\n        this.state = {\n            soundPlaying: false,\n            requester: null,\n            mediaName: null\n        }\n    }\n\n    consumer = async () => {\n        if (!this.ws.hasNext() || this.consumerLocked) {\n            return;\n        }\n\n        let currentEvent = this.ws.next();\n        let {url, volume} = currentEvent.eventData;\n        this.consumerLocked = true;\n\n        let audio = new Audio(url);\n        this.setState({soundPlaying: true});\n        audio.addEventListener(\"ended\", () => {\n            this.setState({soundPlaying: false});\n            setTimeout(() => {\n                this.consumerLocked = false;\n            }, 5000);\n        });\n        audio.volume = volume;\n        await audio.play();\n    }\n\n    componentDidMount() {\n        let urlParams = new URLSearchParams(window.location.search);\n        this.ws = createWebSocket('SOUND_PLAYER', ['AUDIO'], urlParams.get('channelId'), \"default\", () => {this.setState({connected: true})});\n        this.ws.connect();\n        setInterval(this.consumer, 5000);\n    }\n\n    componentWillUnmount() {\n\t\tthis.ws.disconnect();\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div style={{height: \"100vh\", width: \"100vw\", userSelect: \"none\"}} className=\"App\">\n                {this.state.soundPlaying ?\n                    <div> \n                        <img \n                            style={{\n                                position: \"absolute\",\n                                width: \"100px\",\n                                height: \"100px\",\n                                top: \"50%\",\n                                left: \"50%\",\n                                transform: \"translate(-50%, -50%)\"\n                            }} \n                            src={`${process.env.PUBLIC_URL}/images/speaker.png`} />\n                        <span style={{\n                            position: \"absolute\",\n                            top: \"50%\",\n                            left: \"50%\",\n                            transform: \"translate(-50%, -50%)\",\n                            fontSize: \"20pt\",\n                            WebkitTextStroke: \"1px black\",\n                            WebkitTextFillColor: \"white\"\n                        }}>\n                            {this.state.message}\n                        </span>\n                    </div>\n                : null  }\n            </div>\n\t\t);\n\t}\n}\n\nexport default SoundPlayer;\n","import React from 'react';\n\nlet SpeechSynthesisTester = (props) => {\n    let speechTest = () => {\n        let msg = new SpeechSynthesisUtterance();\n        msg.text = \"This is a test of the web standard Speech Synthesis module.  If you can hear this, the test was a success.\";\n        window.speechSynthesis.speak(msg);\n    }\n\n    return (\n        <div>\n            <h1>Speech Synthesis Tester</h1>\n            <table>\n                <tr>\n                    <td>SpeechSynthesisUtterance Supported</td>\n                    <td>{SpeechSynthesisUtterance ? \"Yes\" : \"No\"}</td>\n                </tr>\n                <tr>\n                    <td>window.speechSynthesis Supported</td>\n                    <td>{window.speechSynthesis ? \"Yes\" : \"No\"}</td>\n                </tr>\n            </table>\n            <button onClick={() => {speechTest()}}>Test Speech Synthesis</button>\n        </div>\n    )\n}\n\nexport default SpeechSynthesisTester;","let convertSecondsToAltTimestamp = (seconds) => {\r\n    let m = Math.floor(seconds / 60);\r\n    let s = Math.floor(seconds % 60);\r\n    let ms = Math.floor((seconds - Math.trunc(seconds)) * 1000);\r\n\r\n    return `${m.toString().padStart(2, \"0\")}:${s.toString().padStart(2, \"0\")}.${ms.toString().padStart(3, \"0\")}`;\r\n}\r\n\r\nlet convertSubtitlesToWebVtt = (subtitles, substitution) => {\r\n    if (!substitution || substitution === \"\") {\r\n        substitution = \"[Missing Audio]\";\r\n    }\r\n    return \"WEBVTT\\n\\n\" + subtitles.map((subtitle) => {\r\n        if (substitution && (subtitle.text === \"[male_dub]\" || subtitle.text === \"[female_dub]\")) {\r\n            return `${convertSecondsToAltTimestamp(subtitle.startTime)} --> ${convertSecondsToAltTimestamp(subtitle.endTime)}\\n${substitution}`;\r\n        } else {\r\n            return `${convertSecondsToAltTimestamp(subtitle.startTime)} --> ${convertSecondsToAltTimestamp(subtitle.endTime)}\\n${subtitle.text}`;\r\n        }\r\n    }).join(\"\\n\\n\");\r\n}\r\n\r\nexport let createWebVttDataUri = (subtitles, substitution) => {\r\n    return \"data:text/vtt;base64,\" + btoa(convertSubtitlesToWebVtt(subtitles, substitution));\r\n}","import React from 'react';\r\nimport {createWebVttDataUri} from '../util/VideoTools';\r\n\r\nexport default class WhatTheDubPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoElement = React.createRef();\r\n\r\n        this.timeOut = null;\r\n        this.currentIndex = -1;\r\n        this.isTalking = false;\r\n        this.hasEnded = false;\r\n\r\n        this.state = {\r\n            vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\r\n            vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0),\r\n            muted: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onresize = () => {\r\n            this.setState({\r\n                vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0),\r\n                vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)\r\n            })\r\n        };\r\n\r\n        this.videoElement.current.play();\r\n\r\n        this.zombieInterval = window.setInterval(() => {\r\n            console.log(\"CHECKING FOR ZOMBIES\");\r\n            console.log(\"IS TALKING? \" + this.isTalking);\r\n            console.log(\"HAS ENDED?  \" + this.hasEnded);\r\n            if (!this.isTalking && this.hasEnded) {\r\n                console.log(\"OKAY, NOW I'M DONE.\");\r\n                this.pauseListener();\r\n                this.props.onComplete();\r\n                return;\r\n            }\r\n        }, 3000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"SHIT\");\r\n        window.clearInterval(this.zombieInterval);\r\n    }\r\n\r\n    setIsTalking(b) {\r\n        this.isTalking = b;\r\n    }\r\n\r\n    setMuted(muted) {\r\n        this.setState({muted});\r\n    }\r\n\r\n    setCurrentIndex(i) {\r\n        this.currentIndex = i;\r\n    }\r\n\r\n    speak(subtitle, text) {\r\n        let voice = null;\r\n\r\n        this.setIsTalking(true);\r\n\r\n        if (subtitle.text === \"[male_dub]\") {\r\n            voice = window.maleVoice;\r\n        } else {\r\n            voice = window.femaleVoice;\r\n        }\r\n        \r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.voice = voice;\r\n        msg.text = text;\r\n        msg.onend = () => {\r\n            console.log(\"SPEAKING HAS ENDED\");\r\n            this.setIsTalking(false);\r\n            let ve = document.getElementById(\"videoElement\");\r\n            ve.play();\r\n        }\r\n        window.speechSynthesis.speak(msg);\r\n    }\r\n\r\n    updateSubtitle(video) {\r\n        let index = this.props.subtitles.findIndex((subtitle) => {\r\n            return video.currentTime > subtitle.startTime && video.currentTime < subtitle.endTime;\r\n        });\r\n\r\n        if (index !== this.currentIndex) {\r\n            if (this.isTalking) {\r\n                video.pause();\r\n                return;\r\n            }\r\n\r\n            if (this.currentIndex >= 0) {\r\n                let currentSubtitle = this.props.subtitles[this.currentIndex];\r\n                if (currentSubtitle.text === \"[male_dub]\" || currentSubtitle.text === \"[female_dub]\") {\r\n                    this.setMuted(false);\r\n                }\r\n            }\r\n\r\n            if (index >= 0) {\r\n                let subtitle = this.props.subtitles[index];\r\n                if (subtitle.text === \"[male_dub]\" || subtitle.text === \"[female_dub]\") {\r\n                    this.setMuted(true);\r\n                    if (this.props.substitution) {\r\n                        this.speak(subtitle, this.props.substitution);\r\n                    }\r\n                }        \r\n            }\r\n\r\n            this.setCurrentIndex(index);\r\n        }\r\n    }\r\n\r\n    startListener() {\r\n        this.interval = setInterval(() => {\r\n            let video = document.getElementById(\"videoElement\");\r\n            if (!video) {\r\n                this.pauseListener();\r\n                return;\r\n            }    \r\n            this.updateSubtitle(video);\r\n        }, 1000/60);\r\n    }\r\n\r\n    pauseListener() {\r\n        clearInterval(this.interval);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div \r\n                style={{overflow: 'hidden', width: \"100vw\", height: \"100vh\", position: \"relative\"}}>\r\n                <div style={{position: \"absolute\", top: \"0px\", width: \"100%\", height: \"100vh\", zIndex: 9998, backgroundColor: \"black\"}}>\r\n                    <video\r\n                        id=\"videoElement\"\r\n                        src={this.props.url}\r\n                        style={{width: this.state.vw, height: this.state.vh}}\r\n                        controls={false}\r\n                        crossOrigin=\"anonymous\"\r\n                        onPlay={() => {this.startListener()}}\r\n                        onPause={() => {this.pauseListener()}}\r\n                        onEnded={() => {\r\n                            if (this.isTalking) {\r\n                                console.log(\"DONE\");\r\n                                this.pauseListener(); \r\n                                this.props.onComplete();\r\n                            } else {\r\n                                console.log(\"NOT QUITE DONE\");\r\n                                this.hasEnded = true;\r\n                            }\r\n                        }}\r\n                        muted={this.state.muted}\r\n                        ref={this.videoElement}>\r\n                            <track label=\"English\" kind=\"subtitles\" srcLang=\"en\" src={createWebVttDataUri(this.props.subtitles, this.props.substitution)} default></track>\r\n                    </video>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\n\nimport WhatTheDubPlayer from './WhatTheDubPlayer';\nimport {createWebSocket} from '../ws/WebSocketFactory';\n\nexport default class WhatTheDub extends React.Component {\n    constructor(props) {\n        super(props);\n        this.ws = null;\n        this.state = {\n            currentEvent: null,\n            joinedMiniGame: false\n        }\n    }\n\n    consumer = () => {\n        if (!this.ws.hasNext() || this.state.currentEvent) {\n            return;\n        }\n\n        let entry = this.ws.next();\n\n        if (entry.eventData.substitution) {\n            entry.eventData.substitution = entry.eventData.substitution.replace(/[^\\x00-\\x7F]/g, \"\");\n        }\n\n        this.setState({currentEvent: entry});\n    }\n\n    componentDidMount() {\n        let urlParams = new URLSearchParams(window.location.search);\n        this.ws = createWebSocket('WTD', ['DUB'], urlParams.get('channelId'))\n        this.ws.connect();\n        setInterval(this.consumer, 0);\n    }\n\n    componentWillUnmount() {\n\t\tthis.ws.disconnect();\n\t}\n\n    render(){\n        if (this.state.currentEvent && this.state.joinedMiniGame){\n            return (\n                <div style={{backgroundColor: \"black\"}}>\n                    <div style={{\n                        position: \"absolute\", \n                        top: \"0px\", \n                        left: \"0px\", \n                        width: \"20vw\", \n                        zIndex: 9999}}>\n                        <img style={{width: \"20vw\"}} src=\"images/wtd.png\" />\n                    </div>\n                    { this.state.currentEvent.eventData.requester ?\n                        <span style={{\n                            position: \"absolute\", \n                            top: \"0px\", \n                            left: \"50%\", \n                            transform: \"translateX(-50%)\",\n                            fontSize: \"20pt\",\n                            WebkitTextStroke: \"1px black\",\n                            WebkitTextFillColor: \"white\",\n                            zIndex: \"9999\"}}>\n                                Submitted By {this.state.currentEvent.eventData.requester}    \n                        </span> : null\n                    }\n                    <WhatTheDubPlayer\n                        url={this.state.currentEvent.eventData.videoData.videoUrl} \n                        subtitles={this.state.currentEvent.eventData.videoData.subtitles} \n                        substitution={this.state.currentEvent.eventData.substitution} \n                        onComplete={() => {this.setState({currentEvent: null})}} />\n                </div>\n            )\n        } else {\n            return (\n                <div style={{background: \"black\", height: \"100vh\"}}>\n                    <div style={{position: \"absolute\", top: \"0px\", left: \"0px\", width: \"20vw\", zIndex: 9999}}>\n                        <img style={{width: \"20vw\"}} src=\"images/wtd.png\" />\n                    </div>\n                    <div style={{\n                        position: \"absolute\", \n                        width: \"100vw\",\n                        textAlign: \"center\",\n                        top: \"50%\", \n                        left: \"50%\", \n                        transform: \"translate(-50%, -50%)\",\n                        fontSize: \"20pt\",\n                        WebkitTextStroke: \"1px black\",\n                        WebkitTextFillColor: \"white\"}}>\n                            Submit your answer with the command \"!games:wtd:answer\" followed by your submission!    \n                    </div>\n                    {this.state.joinedMiniGame ? null : <button onClick={() => {this.setState({joinedMiniGame: true})}} style={{position: \"absolute\", bottom: \"0px\", right: \"0px\", width: \"200px\", height: \"100px\"}}>Click to Join Mini Games</button>}\n                </div>\n            )\n        }\n\n    }\n}","export const configs = {\n    YOSHI: {\n        message: 'Incoming raid from ${raider} with a party of ${raidSize}!',\n        sprites: [\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-black.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-blue.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-pink.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-purple.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/yoshi/yoshi-walk-yellow.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            }\n        ],\n        music: {\n            file: process.env.PUBLIC_URL + '/sounds/yoshi/yoshi-fanfare.mp3',\n            volume: 1\n        },\n        leavingSound: {\n            file: process.env.PUBLIC_URL + '/sounds/yoshi/yoshi-tongue.mp3',\n            volume: 1\n        }\n    },\n    SKULLMAN: {\n        message: 'HOLY SHIT! ${raider} raided with a party of ${raidSize}!',\n        sprites: [\n            {\n                file: process.env.PUBLIC_URL + '/images/skullman/skullman-walk.png',\n                startFrame: 0,\n                endFrame: 9,\n                frameWidth: 99,\n                frameHeight: 128,\n                frameRate: 15\n            }\n        ],\n        music: {\n            file: process.env.PUBLIC_URL + '/sounds/skullman/battle.mp3',\n            volume: 1\n        },\n        leavingSound: {\n            file: process.env.PUBLIC_URL + '/sounds/skullman/ash-groovy.mp3',\n            volume: 3\n        }\n    },\n    CHAIR: {\n        message: 'CHEESE IT UP! ${raider} raided with a party of ${raidSize}!',\n        sprites: [\n            {\n                file: process.env.PUBLIC_URL + '/images/chair/cheesesteak-walk.png',\n                startFrame: 0,\n                endFrame: 5,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/chair/yuu.png',\n                startFrame: 24,\n                endFrame: 29,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            },\n            {\n                file: process.env.PUBLIC_URL + '/images/chair/tanako.png',\n                startFrame: 30,\n                endFrame: 41,\n                frameWidth: 128,\n                frameHeight: 128,\n                frameRate: 15\n            }\n        ],\n        music: {\n            file: process.env.PUBLIC_URL + '/sounds/chair/music.mp3',\n            volume: 1\n        },\n        leavingSound: {\n            file: process.env.PUBLIC_URL + '/sounds/chair/cheeseitup.wav',\n            volume: 1\n        }\n    }\n}","import React, {useEffect, useState} from 'react';\nimport ZeldaRaidAlert from './multi/ZeldaRaidAlert';\nimport ChargeRaidAlert from './multi/ChargeRaidAlert';\n\nimport {configs} from '../util/testData';\nimport axios from 'axios';\n\nconst getRaidAlert = async (id) => {\n    let found = await axios.get(`https://deusprogrammer.com/api/streamcrabs/dynamic-alerts/${id}`, {\n        headers: {\n            \"X-Access-Token\": localStorage.getItem(\"accessToken\")\n        }\n    });\n\n    return found.data;\n}\n\nconst RaidAlertTestHarness = () => {\n    const [clicked, setClicked] = useState(false);\n    const [raider, setRaider] = useState(\"daddyfartbux\");\n    const [raidSize, setRaidSize] = useState(100);\n    const [theme, setTheme] = useState(\"CUSTOM\");\n    const [key, setKey] = useState(\"SKULLMAN\");\n    const [storedConfig, setStoredConfig] = useState({});\n\n    useEffect(async () => {\n        // Get url params\n        const urlParams = new URLSearchParams(window.location.search);\n        const raidTheme = urlParams.get('theme');\n        const raidId = urlParams.get('key');\n        setRaider(urlParams.get('raider') ? urlParams.get('raider') : \"daddyfartbux\");\n        setRaidSize(urlParams.get('raidSize') ? urlParams.get('raidSize') : 10);\n        setTheme(urlParams.get('theme') ? urlParams.get('theme') : \"YOSHI\");\n        setKey(urlParams.get('key') ? urlParams.get('key') : \"SKULLMAN\");\n\n        if (raidTheme === \"STORED\") {\n            let config = await getRaidAlert(raidId);\n            setStoredConfig(config);\n        }\n    }, []);\n\n    let raidAlert = null;\n\n    switch(theme) {\n        case \"ZELDA\":\n            raidAlert = <ZeldaRaidAlert \n                            variable={raidSize} \n                            onComplete={() => {setClicked(false)}} />;\n            break;\n        case \"CUSTOM\":\n            raidAlert = <ChargeRaidAlert \n                            variable={raidSize} \n                            config={configs[key]}\n                            onComplete={() => {setClicked(false)}} />;\n            break;\n        case \"STORED\":\n            raidAlert = <ChargeRaidAlert \n                            variable={raidSize} \n                            config={storedConfig}\n                            onComplete={() => {setClicked(false)}} />;\n            break;\n        default:\n            raidAlert = null;\n    }\n\n    return (\n        <div>\n            {clicked ? \n                <div>\n                    {raidAlert}\n                    <span className=\"alert-text\">{`${raider} is raiding with ${raidSize} viewers.`}</span>\n                </div>\n             : \n                <div>\n                    <p>Testing with size <b>{raidSize}</b> and raider <b>{raider}</b></p>\n                    <button onClick={() => {\n                        setClicked(true);\n                    }}>Click to Test</button>\n                    <h3>Debug</h3>\n                    <pre>\n                        {JSON.stringify(storedConfig, null, 5)}\n                    </pre>\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default RaidAlertTestHarness","import React from 'react';\nimport {createWebSocket} from '../ws/WebSocketFactory';\n\nclass TTS extends React.Component {\n    constructor(props) {\n        super(props);\n        this.consumerLocked = false;\n        this.state = {\n            soundPlaying: false,\n            requester: null,\n            mediaName: null,\n            started: false,\n            textList: []\n        }\n    }\n\n    consumer = () => {\n        if (!this.ws.hasNext() || this.consumerLocked) {\n            return;\n        }\n\n        let currentEvent = this.ws.next();\n        let {requester, text} = currentEvent.eventData;\n        this.consumerLocked = true;\n\n        let msg = new SpeechSynthesisUtterance();\n        msg.text = `${requester} said: '${text}'`;\n        msg.voice = window.maleVoice;\n        let textList = [...this.state.textList];\n        textList.push(\"- \" + msg.text);\n        window.speechSynthesis.speak(msg);\n\n        this.setState({textList});\n        msg.onend = () => {\n            setTimeout(() => {\n                this.consumerLocked = false;\n            }, 5000);\n        };\n    }\n\n    componentWillUnmount() {\n\t\tthis.ws.disconnect();\n\t}\n\n    start = () => {\n        let urlParams = new URLSearchParams(window.location.search);\n        this.ws = createWebSocket('TTS', ['TTS'], urlParams.get('channelId'))\n        this.ws.connect();\n        setInterval(this.consumer, 0);\n        this.setState({started: true, textList: [\"** Connected to Websocket **\"]});\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n                <h1>TTS Tool (Open in Browser, not in Streaming Tool)</h1>\n                {this.state.started ? <button disabled>TTS Activated</button> : <button onClick={() => {this.start();}}>Activate TTS</button>}\n                <h3>Log</h3>\n                <pre style={{backgroundColor: \"gray\", color: \"white\", width: \"80%\", height: \"500px\", marginLeft: \"10px\"}}>\n                    {this.state.textList.map((text) => {\n                        return \" \" + text + \"\\n\";\n                    })}\n                </pre>\n            </div>\n\t\t);\n\t}\n}\n\nexport default TTS;\n","import React, {useState} from 'react';\nimport VideoPlayer from './multi/VideoPlayer';\n\nconst VideoTestHarness = () => {\n    const [chromaKey, setChromaKey] = useState(null);\n    const [lowerBound, setLowerBound] = useState(0);\n    const [upperBound, setUpperBound] = useState(255);\n    const [visible, setVisible] = useState(true);\n    let params = new URLSearchParams(window.location.search);\n    let videoUrl = params.get(\"videoUrl\");\n    let background = params.get(\"backgroundUrl\");\n\n    return (\n        <div style={{background: `url(${background})`}}>\n            { visible ?\n                <VideoPlayer\n                    url={videoUrl}\n                    volume={1.0}\n                    chromaKey={chromaKey}\n                    lowerBound={lowerBound}\n                    upperBound={upperBound}\n                    onComplete={() => {\n                        setVisible(false);\n                        setTimeout(() => {\n                            setVisible(true);\n                        }, 500);\n                    }}\n                /> : null}\n            <div style={{position: \"absolute\", bottom: \"0px\", width: \"100vw\", textAlign: \"center\", zIndex: \"9999\"}}>\n                <label>Chroma Key&nbsp;</label>\n                <select onChange={({target: {value}}) => {setChromaKey(value)}}>\n                    <option>None</option>\n                    <option value=\"red\">Red</option>\n                    <option value=\"green\">Green</option>\n                    <option value=\"blue\">Blue</option>\n                    <option value=\"black\">Black</option>\n                    <option value=\"custom\">Custom</option>\n                </select><br/>\n                { chromaKey === \"custom\" ?\n                    <>\n                        <label>Lower Bound</label><input type=\"range\" value={lowerBound} max={255} onChange={({target: {value}}) => {setLowerBound(value)}} /><span>{lowerBound}</span><br/>\n                        <label>Upper Bound</label><input type=\"range\" value={upperBound} max={255} onChange={({target: {value}}) => {setUpperBound(value)}} /><span>{upperBound}</span>\n                    </> : null\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default VideoTestHarness","import React, {useState, useEffect} from 'react';\nimport {createWebSocket} from '../ws/WebSocketFactory';\n\nexport default () => {\n    let ws;\n    const [progress, setProgress] = useState(0);\n    const [max, setMax] = useState(0);\n    const [label, setLabel] = useState(\"\");\n    const [isFilling, setIsFilling] = useState(false);\n\n    let sounds = {};\n    let currentProgress = 0;\n    let maxValue = 0;\n\n    const consumer = () => {\n        if (!ws.hasNext() || isFilling) {\n            return;\n        }\n\n        if (!ws) {\n            return;\n        }\n\n        let event = ws.next();\n        if (!event.eventData.init) {\n            onProgressChange(event.eventData.currentValue);\n        } else {\n            sounds = {\n                increase: new Audio(event.eventData.increaseSoundUrl),\n                decrease: new Audio(event.eventData.decreaseSoundUrl),\n                complete: new Audio(event.eventData.completeSoundUrl)\n            }\n            currentProgress = event.eventData.currentValue;\n            maxValue = event.eventData.maxValue;\n            setProgress(event.eventData.currentValue);\n            setMax(event.eventData.maxValue);\n        }\n    }\n\n    useEffect(() => {\n        let urlParams = new URLSearchParams(window.location.search);\n        ws = createWebSocket('GAUGE', ['GAUGE'], urlParams.get('channelId'), urlParams.get('subPanel') ? urlParams.get('subPanel') : \"default\", () => {});\n        ws.connect();\n        setLabel(urlParams.get('label'));\n        const interval = setInterval(consumer, 5000);\n\n        return () => {\n            clearInterval(interval);\n        }\n    }, []);\n\n    const onProgressChange = (newProgress) => {\n        let deltaT = 100;\n        let deltaP = (newProgress - currentProgress)/20;\n        newProgress = parseInt(newProgress);\n        let interval = setInterval(() => {\n            setProgress((oldValue) => {\n                // When the gauge is complete, play the complete music.\n                if (oldValue >= maxValue) {\n                    sounds.complete.play();\n                }\n\n                // When iteration is done, clear the interval.\n                if (oldValue >= newProgress) {\n                    oldValue = newProgress;\n                    currentProgress = newProgress;\n                    clearInterval(interval);\n                    setIsFilling(false);\n                    return oldValue;\n                }\n\n                // Loop part of the sound\n                sounds.increase.currentTime = 0;\n                sounds.increase.play();\n\n                // Increment the value\n                return oldValue + deltaP;\n            });\n        }, deltaT);\n        setIsFilling(true);\n    }\n\n    if (!max) {\n        return <div></div>;\n    }\n\n    return (\n        <div style={{position: \"relative\"}}>\n            <progress style={{height: \"100vh\", maxHeight: \"100px\", width: \"100vw\"}} value={progress} max={max}>{progress}%</progress><br/>\n            <span style={{position: \"absolute\", top: \"50%\", transform: \"translateY(-50%)\", textAlign: \"center\", width: \"100vw\", fontSize: \"30px\", fontFamily: \"Marker Felt, fantasy\", WebkitTextStrokeWidth: \"1px\", WebkitTextStrokeColor: \"black\", color: \"white\"}}>{`${label} ${progress}/${max}`}</span>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {createWebSocket} from '../ws/WebSocketFactory';\n\nexport default () => {\n    let ws;\n    const [isFilling, setIsFilling] = useState(false);\n    const [displayGauge, setDisplayGauge] = useState(null);\n    const [isDisappearing, setIsDisappearing] = useState(false);\n\n    const gaugeState = {};\n    let gaugeIndex = 0;\n\n    const consumer = () => {\n        if (!ws || !ws.hasNext() || isFilling) {\n            return;\n        }\n\n        let event = ws.next();\n        if (!event.eventData.init) {\n            onProgressChange(event.eventData.gaugeKey, event.eventData.currentValue);\n        } else {\n            console.log(\"Adding Gauge: \" + event.eventData.subPanel);\n            gaugeState[event.eventData.gaugeKey] = {\n                label: event.eventData.label,\n                currentProgress: event.eventData.currentValue,\n                maxValue: event.eventData.maxValue,\n                sounds: {\n                    increase: new Audio(event.eventData.increaseSoundUrl),\n                    decrease: new Audio(event.eventData.decreaseSoundUrl),\n                    complete: new Audio(event.eventData.completeSoundUrl)\n                }\n            }\n        }\n    }\n\n    const gaugeChange = () => {\n        // If a gauge isn't currently filling, change the gauge that is showing currently\n        if (!isFilling) {\n            const gaugeKeys = Object.keys(gaugeState);\n            gaugeIndex += 1;\n            if (gaugeIndex >= gaugeKeys.length) {\n                gaugeIndex = 0;\n            }\n\n            const key = gaugeKeys[gaugeIndex];\n            const gauge = gaugeState[key];\n\n            console.log(\"GAUGES:     \" + gaugeKeys);\n            console.log(\"NEXT GAUGE: \" + JSON.stringify(gauge, null, 5));\n\n            if (!gauge) {\n                return;\n            }\n\n            setIsDisappearing(true);\n            setTimeout(() => {\n                setDisplayGauge({\n                    label: gauge.label,\n                    progress: gauge.currentProgress,\n                    max: gauge.maxValue\n                });\n                setIsDisappearing(false);\n            }, 1000);\n        }\n    }\n\n    useEffect(() => {\n        let urlParams = new URLSearchParams(window.location.search);\n        ws = createWebSocket('GAUGE', ['GAUGE'], urlParams.get('channelId'), \"_ALL_GAUGES\", () => {});\n        ws.connect();\n        const consumerInt = setInterval(consumer, 500);\n        const gaugeInt = setInterval(gaugeChange, 10000);\n\n        // Clear intervals on unmount\n        return () => {\n            clearInterval(consumerInt);\n            clearInterval(gaugeInt);\n        }\n    }, []);\n\n    const onProgressChange = (key, newProgress) => {\n        setIsFilling(true);\n        gaugeIndex = Object.keys(gaugeState).indexOf(key);\n\n        let gauge = gaugeState[key];\n        let deltaT = 100;\n        let deltaP = (newProgress - gauge.currentProgress)/20;\n        newProgress = parseInt(newProgress);\n        let interval = setInterval(() => {\n            setDisplayGauge((oldGauge) => {\n                // When the gauge is complete, play the complete music.\n                if (gauge.currentProgress >= gauge.maxValue) {\n                    gauge.sounds.complete.play();\n                }\n\n                // When iteration is done, clear the interval.\n                if (gauge.currentProgress >= newProgress) {\n                    gauge.currentProgress = newProgress;\n                    clearInterval(interval);\n                    setIsFilling(false);\n                    return {\n                        label: gauge.label,\n                        progress: gauge.currentProgress,\n                        max: gauge.maxValue\n                    };\n                }\n\n                // Loop part of the sound\n                gauge.sounds.increase.currentTime = 0;\n                gauge.sounds.increase.play();\n                gauge.currentProgress += deltaP;\n\n                return {\n                    label: gauge.label,\n                    progress: gauge.currentProgress,\n                    max: gauge.maxValue\n                };\n            });\n        }, deltaT);\n    }\n\n    if (!displayGauge) {\n        return <div></div>;\n    }\n\n    return (\n        <div className={isDisappearing ? \"gauge disappearing\" : \"gauge appearing\"} style={{position: \"relative\"}}>\n            <progress style={{height: \"100vh\", maxHeight: \"100px\", width: \"100vw\"}} value={displayGauge.progress} max={displayGauge.max}>{displayGauge.progress}%</progress><br/>\n            <span style={{position: \"absolute\", top: \"50%\", transform: \"translateY(-50%)\", textAlign: \"center\", width: \"100vw\", fontSize: \"30px\", fontFamily: \"Marker Felt, fantasy\", WebkitTextStrokeWidth: \"1px\", WebkitTextStrokeColor: \"black\", color: \"white\"}}>{`${displayGauge.label} ${displayGauge.progress}/${displayGauge.max}`}</span>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\n\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport DeathCounter from './routes/DeathCounter';\nimport Home from './routes/Home';\nimport RequestQueue from './routes/RequestQueue';\nimport TwitchMultiOverlay from './routes/multi/TwitchMultiOverlay';\nimport SoundPlayer from './routes/SoundPlayer';\nimport SpeechSynthesisTester from './routes/SpeechSynthesisTester';\nimport WhatTheDub from './routes/WhatTheDub';\nimport RaidAlertTestHarness from './routes/RaidAlertTestHarness';\nimport TTS from './routes/TTS';\nimport VideoTestHarness from './routes/VideoTestHarness';\nimport Gauge from './routes/Gauge';\nimport MultiGauge from './routes/MultiGauge';\n\nclass App extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/tts`} component={TTS} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/wtd`} component={WhatTheDub} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/speech/test`} component={SpeechSynthesisTester} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/multi`} component={TwitchMultiOverlay} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/death-counter`} component={DeathCounter} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/sound-player`} component={SoundPlayer} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/requests`} component={RequestQueue} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/raid-test`} component={RaidAlertTestHarness} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/video-test`} component={VideoTestHarness} exact />\n\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/tools/raid-test`} component={RaidAlertTestHarness} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/tools/video-test`} component={VideoTestHarness} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/multi`} component={TwitchMultiOverlay} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/death-counter`} component={DeathCounter} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/sound-player`} component={SoundPlayer} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/requests`} component={RequestQueue} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/gauges`} component={Gauge} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/overlays/mgauge`} component={MultiGauge} exact />\n\t\t\t\t\t<Route path={`${process.env.PUBLIC_URL}/`} component={Home} />\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nwindow.speechSynthesis.onvoiceschanged = () => {\n  window.maleVoice = window.speechSynthesis.getVoices().find((element) => {\n      return element.name === \"Microsoft David - English (United States)\";\n  });\n\n  window.femaleVoice = window.speechSynthesis.getVoices().find((element) => {\n      return element.name === \"Microsoft Zira - English (United States)\";\n  });\n\n  console.log(\"MAN:   \" + window.maleVoice);\n  console.log(\"WOMAN: \" + window.femaleVoice);\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}